{"version":3,"sources":["Header.js","GiphyItems.js","BodyGiphy.js","RedditItems.js","BodyReddit.js","App.js","index.js"],"names":["Header","siteName","setSiteName","style","display","flexDirection","flexWrap","justifyContent","backgroundColor","padding","className","onClick","prev","GiphyItems","apiResponse","length","map","element","url","window","open","border","width","height","margin","overflow","alignItems","src","images","fixed_width","alt","whiteSpace","textOverflow","color","title","uuidv4","Body","setSearchFor","ref","searchFor","useRef","undefined","after","marginTop","marginRight","borderRadius","type","placeholder","current","value","RedditItems","items","children","console","log","endUrl","data","permalink","thumbnail","BodyReddit","API_Key","App","useState","apiAdress","setApiAdress","setApiResponse","useEffect","fetch","then","res","json","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92cc1f3a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n//const API_Key = \"uUC5IzSPpIZ21XOrvLjAoS689uAfPI55\";\n\nexport default function Header({ siteName, setSiteName }) {\n  function handleSiteChange() {\n    setSiteName((prev) => {\n      if (prev === \"giphy\") return \"reddit\";\n      return \"giphy\";\n    });\n  }\n  function getLinkName() {\n    if (siteName === \"giphy\") return <p>reddit</p>;\n    return <p>giphy</p>;\n  }\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#ececec\",\n        padding: \"20px\",\n      }}\n    >\n      <div>\n        <h1>{siteName} Api</h1>\n      </div>\n      <div className=\"link-to-another-site\" onClick={() => handleSiteChange()}>\n        {getLinkName()}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nexport default function GiphyItems({ apiResponse }) {\n  //console.log(apiResponse);\n  if (apiResponse.length === 0) return null;\n  function handleOnClick(url) {\n    window.open(url);\n  }\n  return (\n    <>\n      {apiResponse.map((element) => {\n        return (\n          <div\n            onClick={() => handleOnClick(element.url)}\n            className=\"each-gif\"\n            key={uuidv4()}\n            style={{\n              border: \"2px solid white\",\n              width: \"15%\",\n            }}\n          >\n            <div\n              style={{\n                height: \"200px\",\n                margin: \"8px\",\n                overflow: \"hidden\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <img src={element.images.fixed_width.url} alt=\"\"></img>\n            </div>\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"white\",\n                width: \"100%\",\n              }}\n            >\n              {element.title}\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n/*\n{apiResponse.data.map((element) => {\n          return (\n            <div style={{ height: \"200px\", margin: \"8px\", display: \"flex\" }}>\n              <img src={element.images.fixed_width.url} alt=\"\"></img>\n            </div>\n          );\n        })}\n*/\n","import GiphyItems from \"./GiphyItems\";\nimport { useRef } from \"react\";\n\n//const API_Key = \"uUC5IzSPpIZ21XOrvLjAoS689uAfPI55\";\nexport default function Body({ setSearchFor, apiResponse, searchFor }) {\n  const ref = useRef();\n  if (apiResponse === undefined || apiResponse.after !== undefined)\n    return <></>;\n\n  function onSubmit() {\n    if (ref.current.value === \"\") return;\n    setSearchFor(ref.current.value);\n\n    ref.current.value = \"\";\n  }\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"#cfcfcf\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"20px\",\n        marginTop: \"4px\",\n      }}\n    >\n      <div>\n        <input\n          style={{ height: \"40px\", marginRight: \"10px\", borderRadius: \"10px\" }}\n          type=\"text\"\n          placeholder=\"search for giphy...\"\n          ref={ref}\n        ></input>\n        <button\n          style={{ height: \"40px\", marginRight: \"10px\", borderRadius: \"10px\" }}\n          onClick={() => onSubmit()}\n        >\n          enter\n        </button>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          backgroundColor: \"black\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <GiphyItems apiResponse={apiResponse} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport default function RedditItems({ apiResponse }) {\n  if (apiResponse === undefined || apiResponse.after === undefined)\n    return <></>;\n  //console.log(apiResponse);\n  function handleOnClick(endUrl) {\n    window.open(`https://www.reddit.com/${endUrl}`);\n  }\n  const items = apiResponse.children;\n  console.log(items);\n  return (\n    <>\n      {items.map((element) => {\n        return (\n          <div\n            onClick={() => handleOnClick(element.data.permalink)}\n            className=\"each-gif\"\n            key={uuidv4()}\n            style={{\n              border: \"2px solid white\",\n              width: \"15%\",\n            }}\n          >\n            <div\n              style={{\n                height: \"200px\",\n                margin: \"8px\",\n                overflow: \"hidden\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <img src={element.data.thumbnail} alt=\"\"></img>\n            </div>\n            <div\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"white\",\n                width: \"100%\",\n              }}\n            >\n              {element.title}\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useRef } from \"react\";\nimport RedditItems from \"./RedditItems.js\";\nexport default function BodyReddit({ setSearchFor, apiResponse, searchFor }) {\n  const ref = useRef();\n  //console.log(apiResponse);\n  //console.log(searchFor);\n  function onSubmit() {\n    if (ref.current.value === \"\") return;\n    setSearchFor(ref.current.value);\n  }\n  return (\n    <div\n      style={{\n        backgroundColor: \"#cfcfcf\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"20px\",\n        marginTop: \"4px\",\n      }}\n    >\n      <div>\n        <input\n          style={{ height: \"40px\", marginRight: \"10px\", borderRadius: \"10px\" }}\n          type=\"text\"\n          placeholder=\"search for giphy...\"\n          ref={ref}\n        ></input>\n        <button\n          style={{ height: \"40px\", marginRight: \"10px\", borderRadius: \"10px\" }}\n          onClick={onSubmit}\n        >\n          enter\n        </button>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          backgroundColor: \"black\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <RedditItems apiResponse={apiResponse} />\n      </div>\n    </div>\n  );\n}\n","import Header from \"./Header.js\";\nimport BodyGiphy from \"./BodyGiphy.js\";\nimport BodyReddit from \"./BodyReddit\";\nimport { useState, useEffect } from \"react\";\nconst API_Key = \"uUC5IzSPpIZ21XOrvLjAoS689uAfPI55\";\nfunction App() {\n  const [searchFor, setSearchFor] = useState(() => {\n    return \"trending\";\n  });\n  const [siteName, setSiteName] = useState(() => {\n    return \"giphy\";\n  });\n  const [apiAdress, setApiAdress] = useState(() => {\n    return `https://api.giphy.com/v1/gifs/search?api_key=${API_Key}&limit=40&q=${searchFor}`;\n  });\n  const [apiResponse, setApiResponse] = useState(() => {\n    return [];\n  });\n  function selectBody() {\n    if (siteName === \"giphy\")\n      return (\n        <BodyGiphy\n          setSearchFor={setSearchFor}\n          apiResponse={apiResponse}\n          searchFor={searchFor}\n        />\n      );\n    else\n      return (\n        <BodyReddit\n          setSearchFor={setSearchFor}\n          apiResponse={apiResponse}\n          searchFor={searchFor}\n        />\n      );\n  }\n  useEffect(() => {\n    fetch(apiAdress) //`https://api.giphy.com/v1/gifs/search?api_key=${API_Key}&limit=40&q=${searchFor}`\n      .then((res) => res.json())\n      .then((res) => {\n        //console.log(res.data);\n        if (siteName === \"giphy\")\n          setApiAdress(\n            `https://api.giphy.com/v1/gifs/search?api_key=${API_Key}&limit=40&q=${searchFor}`\n          );\n        else\n          setApiAdress(\n            `https://www.reddit.com/r/${searchFor}/new.json?sort=new`\n          );\n        setApiResponse(() => {\n          const newData = res.data;\n          return newData;\n        });\n      })\n      .catch((error) => {\n        console.log(`ERROR : ${error}`);\n      });\n  }, [searchFor, apiAdress, siteName]); //[searchFor, siteDetails]\n\n  return (\n    <>\n      <Header siteName={siteName} setSiteName={setSiteName} />\n\n      {selectBody()}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}